{"ast":null,"code":"var _jsxFileName = \"/Users/wasi.alavi/git/Wasi123/trello-client/src/routes.js\";\nimport { Navigate, useRoutes } from \"react-router-dom\";\nimport LogoOnlyLayout from \"./layouts/LogoOnlyLayout\";\nimport Login from \"./pages/Login\";\nimport Register from \"./pages/Register\";\nimport Home from \"./pages/Home\";\nimport ForgotPassword from './pages/ForgotPassword';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PrivateRoute(_ref) {\n  let {\n    element: Element,\n    authenticated,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Route, {\n    ...rest,\n    element: authenticated ? /*#__PURE__*/_jsxDEV(Element, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true,\n      state: {\n        from: rest.location\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_c = PrivateRoute;\nexport default function Router() {\n  const isAuthenticated = false; // Replace with your authentication logic\n\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(LogoOnlyLayout, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 32\n      }, this),\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        index: true,\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"register\",\n        element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"forgot-password\",\n        element: /*#__PURE__*/_jsxDEV(ForgotPassword, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n      path: \"home\",\n      element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 18\n      }, this),\n      authenticated: isAuthenticated\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Router;\nvar _c, _c2;\n$RefreshReg$(_c, \"PrivateRoute\");\n$RefreshReg$(_c2, \"Router\");","map":{"version":3,"names":["Navigate","useRoutes","LogoOnlyLayout","Login","Register","Home","ForgotPassword","jsxDEV","_jsxDEV","PrivateRoute","_ref","element","Element","authenticated","rest","Route","fileName","_jsxFileName","lineNumber","columnNumber","to","replace","state","from","location","_c","Router","isAuthenticated","Routes","children","path","index","_c2","$RefreshReg$"],"sources":["/Users/wasi.alavi/git/Wasi123/trello-client/src/routes.js"],"sourcesContent":["import { Navigate, useRoutes } from \"react-router-dom\";\nimport LogoOnlyLayout from \"./layouts/LogoOnlyLayout\";\nimport Login from \"./pages/Login\";\nimport Register from \"./pages/Register\";\nimport Home from \"./pages/Home\";\nimport ForgotPassword from './pages/ForgotPassword';\nfunction PrivateRoute({ element: Element, authenticated, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      element={authenticated ? (\n        <Element />\n      ) : (\n        <Navigate to=\"/login\" replace state={{ from: rest.location }} />\n      )}\n    />\n  );\n}\n\nexport default function Router() {\n  const isAuthenticated = false; // Replace with your authentication logic\n\n  return (\n    <Routes>\n      <Route path=\"/\" element={<LogoOnlyLayout />}>\n        <Route index element={<Navigate to=\"/login\" />} />\n        <Route path=\"login\" element={<Login />} />\n        <Route path=\"register\" element={<Register />} />\n        <Route path=\"forgot-password\" element={<ForgotPassword />} />\n      </Route>\n      <PrivateRoute\n        path=\"home\"\n        element={<Home />}\n        authenticated={isAuthenticated}\n      />\n    </Routes>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}