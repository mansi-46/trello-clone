{"ast":null,"code":"var _jsxFileName = \"E:\\\\CSCI3130\\\\project-T\\\\group14\\\\project\\\\trello-frontend\\\\src\\\\pages\\\\ViewBoards.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Grid, Card, CardContent, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BoardList() {\n  _s();\n  const [boards, setBoards] = useState([]);\n  useEffect(() => {\n    // Fetch the boards from the backend API\n    fetch('/boards/getAllBoards').then(response => response.json()).then(data => setBoards(data)).catch(error => console.error('Error:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    children: boards.map(board => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      md: 4,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            component: \"div\",\n            children: board.boardName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"text.secondary\",\n            children: [\"Workspace: \", board.workspaceName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this)\n    }, board.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n_s(BoardList, \"cNp00MRMrR2DWBpPFcviSR9le4k=\");\n_c = BoardList;\nexport default ViewBoards;\nvar _c;\n$RefreshReg$(_c, \"BoardList\");","map":{"version":3,"names":["React","useEffect","useState","Grid","Card","CardContent","Typography","jsxDEV","_jsxDEV","BoardList","_s","boards","setBoards","fetch","then","response","json","data","catch","error","console","container","spacing","children","map","board","item","xs","sm","md","variant","component","boardName","fileName","_jsxFileName","lineNumber","columnNumber","color","workspaceName","id","_c","ViewBoards","$RefreshReg$"],"sources":["E:/CSCI3130/project-T/group14/project/trello-frontend/src/pages/ViewBoards.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Grid, Card, CardContent, Typography } from '@mui/material';\r\n\r\nfunction BoardList() {\r\n    const [boards, setBoards] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // Fetch the boards from the backend API\r\n        fetch('/boards/getAllBoards')\r\n            .then(response => response.json())\r\n            .then(data => setBoards(data))\r\n            .catch(error => console.error('Error:', error));\r\n    }, []);\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n            {boards.map(board => (\r\n                <Grid item xs={12} sm={6} md={4} key={board.id}>\r\n                    <Card>\r\n                        <CardContent>\r\n                            <Typography variant=\"h5\" component=\"div\">\r\n                                {board.boardName}\r\n                            </Typography>\r\n                            <Typography color=\"text.secondary\">\r\n                                Workspace: {board.workspaceName}\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n            ))}\r\n        </Grid>\r\n    );\r\n}\r\nexport default ViewBoards;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,IAAI,EAAEC,WAAW,EAAEC,UAAU,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpE,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACZ;IACAY,KAAK,CAAC,sBAAsB,CAAC,CACxBC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIL,SAAS,CAACK,IAAI,CAAC,CAAC,CAC7BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC,CAAC;EACvD,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIX,OAAA,CAACL,IAAI;IAACkB,SAAS;IAACC,OAAO,EAAE,CAAE;IAAAC,QAAA,EACtBZ,MAAM,CAACa,GAAG,CAACC,KAAK,iBACbjB,OAAA,CAACL,IAAI;MAACuB,IAAI;MAACC,EAAE,EAAE,EAAG;MAACC,EAAE,EAAE,CAAE;MAACC,EAAE,EAAE,CAAE;MAAAN,QAAA,eAC5Bf,OAAA,CAACJ,IAAI;QAAAmB,QAAA,eACDf,OAAA,CAACH,WAAW;UAAAkB,QAAA,gBACRf,OAAA,CAACF,UAAU;YAACwB,OAAO,EAAC,IAAI;YAACC,SAAS,EAAC,KAAK;YAAAR,QAAA,EACnCE,KAAK,CAACO;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACR,CAAC,eACb5B,OAAA,CAACF,UAAU;YAAC+B,KAAK,EAAC,gBAAgB;YAAAd,QAAA,GAAC,aACpB,EAACE,KAAK,CAACa,aAAa;UAAA;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ;IAAC,GAV2BX,KAAK,CAACc,EAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAWxC,CACT;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEf;AAAC1B,EAAA,CA7BQD,SAAS;AAAA+B,EAAA,GAAT/B,SAAS;AA8BlB,eAAegC,UAAU;AAAC,IAAAD,EAAA;AAAAE,YAAA,CAAAF,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}