{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nidus\\\\Desktop\\\\assingment 2\\\\group14 new again\\\\group14\\\\project\\\\trello-frontend\\\\src\\\\pages\\\\WorkspaceEdit.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { TextField, Button } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WorkspaceEdit = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Assuming you're using React Router to pass the workspace ID as a parameter\n\n  const [workspace, setWorkspace] = useState({\n    workspaceName: '',\n    workspaceType: '',\n    description: ''\n  });\n  useEffect(() => {\n    // Fetch workspace data from the backend and update the state\n    // You can use the fetch API or axios to make the API call\n    // Replace <backend-api-url> with your actual backend API endpoint\n    fetch(`<backend-api-url>/getWorkspaceById/${id}`).then(response => response.json()).then(data => setWorkspace(data.data));\n  }, [id]);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setWorkspace(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Update workspace data in the backend\n    // You can use the fetch API or axios to make the API call\n    // Replace <backend-api-url> with your actual backend API endpoint\n    fetch(`<backend-api-url>/workspace/edit/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(workspace)\n    }).then(response => response.json()).then(data => {\n      // Handle success or error response\n      console.log(data);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      name: \"workspaceName\",\n      label: \"Workspace Name\",\n      value: workspace.workspaceName,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      name: \"workspaceType\",\n      label: \"Workspace Type\",\n      value: workspace.workspaceType,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      name: \"description\",\n      label: \"Description\",\n      value: workspace.description,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(WorkspaceEdit, \"a/rhzlu8iC0Xy/JKS2oxMSvH82M=\", false, function () {\n  return [useParams];\n});\n_c = WorkspaceEdit;\nexport default WorkspaceEdit;\nvar _c;\n$RefreshReg$(_c, \"WorkspaceEdit\");","map":{"version":3,"names":["React","useState","useEffect","useParams","TextField","Button","jsxDEV","_jsxDEV","WorkspaceEdit","_s","id","workspace","setWorkspace","workspaceName","workspaceType","description","fetch","then","response","json","data","handleInputChange","e","name","value","target","prevState","handleSubmit","preventDefault","method","headers","body","JSON","stringify","console","log","onSubmit","children","label","onChange","fileName","_jsxFileName","lineNumber","columnNumber","type","variant","_c","$RefreshReg$"],"sources":["C:/Users/nidus/Desktop/assingment 2/group14 new again/group14/project/trello-frontend/src/pages/WorkspaceEdit.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { TextField, Button } from '@mui/material';\r\n\r\n\r\n\r\nconst WorkspaceEdit = () => {\r\n    const { id } = useParams(); // Assuming you're using React Router to pass the workspace ID as a parameter\r\n\r\n\r\n\r\n    const [workspace, setWorkspace] = useState({\r\n        workspaceName: '',\r\n        workspaceType: '',\r\n        description: ''\r\n    });\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        // Fetch workspace data from the backend and update the state\r\n        // You can use the fetch API or axios to make the API call\r\n        // Replace <backend-api-url> with your actual backend API endpoint\r\n        fetch(`<backend-api-url>/getWorkspaceById/${id}`)\r\n            .then(response => response.json())\r\n            .then(data => setWorkspace(data.data));\r\n    }, [id]);\r\n\r\n\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setWorkspace(prevState => ({ ...prevState, [name]: value }));\r\n    };\r\n\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // Update workspace data in the backend\r\n        // You can use the fetch API or axios to make the API call\r\n        // Replace <backend-api-url> with your actual backend API endpoint\r\n        fetch(`<backend-api-url>/workspace/edit/${id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(workspace)\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                // Handle success or error response\r\n                console.log(data);\r\n            });\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <TextField\r\n                name=\"workspaceName\"\r\n                label=\"Workspace Name\"\r\n                value={workspace.workspaceName}\r\n                onChange={handleInputChange}\r\n            />\r\n            <TextField\r\n                name=\"workspaceType\"\r\n                label=\"Workspace Type\"\r\n                value={workspace.workspaceType}\r\n                onChange={handleInputChange}\r\n            />\r\n            <TextField\r\n                name=\"description\"\r\n                label=\"Description\"\r\n                value={workspace.description}\r\n                onChange={handleInputChange}\r\n            />\r\n            <Button type=\"submit\" variant=\"contained\">Save</Button>\r\n        </form>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default WorkspaceEdit;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}